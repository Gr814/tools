  /* 计算棋盘上右下角所有的路径
             * 设i表示第i行，j表示第j列
             * 设第i,j节点的开销f(i,j) = f(i - 1,j) + f(i,j - 1)
             * i,j 要大于等于零
             */

            int FindAllPath(int row, int column)
            {
                if (row < 0 || column < 0)
                {
                    return 0;
                }
                int[] pathMap = new int[row * column];
                for(int i = 0; i < row; i++)
                {
                    for (int j = 0; j < column; j++)
                    {
                        if (i == 0 && j == 0)
                        {
                            pathMap[0] = 1;
                        }
                        else if(i == 0)
                        {
                            pathMap[j] = pathMap[ j - 1];
                        }
                        else if (j == 0)
                        {
                            pathMap[i * row] = pathMap[(i - 1) * row];
                        }
                        else
                        {
                            pathMap[i * row + j] = pathMap[(i - 1) * row + j] + pathMap[i * row + j - 1];
                        }
                    }
                }
                return pathMap[(row - 1) * row + column - 1];
            }